allprojects {
	group   = 'de.materna.cms.merkur'
	version = '0.1'
}

configure(subprojects.findAll {it.name != 'merkur-infrastructure'}) {

	buildscript {
		repositories {
			maven { url "http://repo.spring.io/libs-snapshot" }
			mavenLocal()
		}
		dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:0.5.0.M4") }
	}

	apply from: 'http://www.tellurianring.com/projects/gradle-plugins/gradle-templates/apply.groovy'
	apply plugin: 'java'
	apply plugin: 'eclipse'

	ext {
		springVersion     	= '4.0.0.M3'
		springBootVersion 	= '0.5.0.M4'
		slf4jVersion      	= '1.7.5'
		logbackVersion    	= '1.0.13'
		junitVersion      	= '4.11'
		hamcrestVersion   	= '1.3'
	}

	eclipse {
		classpath {
			downloadSources=true
			downloadJavadoc=true
		}
	}

	dependencies {
		compile("org.springframework:spring-context:$springVersion")
		compile("org.springframework.boot:spring-boot-starter:$springBootVersion")
		compile("org.slf4j:slf4j-api:$slf4jVersion")
		compile("ch.qos.logback:logback-classic:$logbackVersion")

		testCompile("junit:junit:$junitVersion")
		testCompile("org.hamcrest:hamcrest-all:$hamcrestVersion")
		testCompile("org.springframework:spring-test:$springVersion")
	}

	configurations { all*.exclude module: 'hamcrest-core' }

	repositories {
		mavenCentral()
		maven { url 'http://repo.spring.io/libs-milestone' }
		maven { url "http://repo.spring.io/libs-snapshot" }
	}
}

configure(subprojects.findAll {it.name == 'merkur-generator' || it.name == 'merkur-logback'}) { ext.springRabbitVersion = '1.2.0.RELEASE' }